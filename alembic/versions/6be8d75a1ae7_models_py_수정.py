"""models.py 수정

Revision ID: 6be8d75a1ae7
Revises: dc153d5fd50f
Create Date: 2025-05-19 21:52:57.065212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6be8d75a1ae7'
down_revision: Union[str, None] = 'dc153d5fd50f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_question_feedback_id', table_name='question_feedback')
    op.drop_table('question_feedback')
    op.alter_column('feedback', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('feedback', 'question_text',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.alter_column('feedback', 'knows',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_foreign_key(None, 'feedback', 'users', ['user_id'], ['id'])
    op.add_column(
    'generated_questions',
    sa.Column('likes', postgresql.JSONB(astext_type=sa.Text()), nullable=False, server_default='{}')
)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('generated_questions', 'likes')
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.alter_column('feedback', 'knows',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('feedback', 'question_text',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('feedback', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('question_feedback',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('knows', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='question_feedback_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='question_feedback_pkey')
    )
    op.create_index('ix_question_feedback_id', 'question_feedback', ['id'], unique=False)
    # ### end Alembic commands ###
